#!/bin/bash

progname=$(basename $0)
THISDIR="$(cd $(dirname "${BASH_SOURCE[0]}") && pwd -P)"
source $THISDIR/../libexec/kvm-maas/common.sh

if [ $# -lt 3 ]; then
    echo "usage: $progname <NODE-NAME> <VIRT-NETWORK-NAME> <MAAS-PROFILE-NAME>"
    exit 1
fi

export NODE=$1
export NETWORK=$2
export MAAS_PROFILE=$3

# This is a sanity check on connecting to the MAAS profile.
maas $MAAS_PROFILE version read >/dev/null 2>&1 || die "MAAS verification failed using profile '$MAAS_PROFILE'"

RUN() {
    echo "$1"
    $THISDIR/../libexec/kvm-maas/$2 || die "failed to run $2"
}

if ! virt_network_exists "$NETWORK"; then
    die "$NETWORK: unknown virsh network"
fi

if virt_domain_exists $NODE; then
    die "domain $NODE already exists"
fi

set -e

RUN "Cleaning up existing MAAS node" node-cleanup
RUN "Cleaning up existing disk image" virt-img-cleanup
RUN "Defining and enlisting QEMU node" virt-node-define

duration=$ENLIST_TIMEOUT
node_state=$(virsh domstate $NODE)
desired_state="shut off"

while [ $duration -gt 0 ]; do
    node_state=$(virsh domstate $NODE)
    if [ "$node_state" = "$desired_state" ]; then
	break
    fi
    echo "$NODE: $node_state"
    sleep 1
    duration=$(($duration - 1))
done

if [ "$node_state" != "$desired_state" ]; then
    die "$NODE did not reach '$desired_state' state after ${ENLIST_TIMEOUT}s"
fi

RUN "Commissioning node in MAAS" node-accept
